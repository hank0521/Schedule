version: '3.8'

services:
  # PostgreSQL 資料庫
  postgres:
    image: postgres:15-alpine
    container_name: schedule_postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-SYSDATA}
      POSTGRES_USER: ${POSTGRES_USER:-sa}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-your_secure_password}
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
      TZ: Asia/Taipei
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      # 資料持久化
      - postgres_data:/var/lib/postgresql/data
      # 自動執行初始化 SQL (依檔名排序執行)
      - ./Database:/docker-entrypoint-initdb.d:ro
    networks:
      - schedule_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-sa} -d ${POSTGRES_DB:-SYSDATA}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # FastAPI 應用程式
  api:
    build:
      context: ./API
      dockerfile: Dockerfile
    container_name: schedule_api
    restart: unless-stopped
    environment:
      # 應用程式設定
      APP_NAME: Schedule API
      DEBUG: ${API_DEBUG:-False}

      # 資料庫設定 (連接到 postgres 服務)
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_DB: ${POSTGRES_DB:-SYSDATA}
      POSTGRES_USER: ${POSTGRES_USER:-sa}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-your_secure_password}

      # 安全性設定
      SECRET_KEY: ${API_SECRET_KEY:-your-secret-key-change-in-production}
      API_KEY: ${API_KEY:-your-api-key}
      ENCRYPTION_KEY: ${ENCRYPTION_KEY:-}

      # CORS 設定
      CORS_ORIGINS: ${CORS_ORIGINS:-["http://localhost:3000","http://localhost:8080"]}

      # 日誌設定
      LOG_LEVEL: ${LOG_LEVEL:-INFO}
      LOG_FILE_MAX_BYTES: ${LOG_FILE_MAX_BYTES:-10485760}
      LOG_FILE_BACKUP_COUNT: ${LOG_FILE_BACKUP_COUNT:-5}

      # 預設 SMTP 伺服器設定
      DEFAULT_SMTP_HOST: ${DEFAULT_SMTP_HOST:-sandbox.smtp.mailtrap.io}
      DEFAULT_SMTP_PORT: ${DEFAULT_SMTP_PORT:-587}
      DEFAULT_SMTP_USER: ${DEFAULT_SMTP_USER:-}
      DEFAULT_SMTP_PASS: ${DEFAULT_SMTP_PASS:-}
      DEFAULT_SMTP_USE_SSL: ${DEFAULT_SMTP_USE_SSL:-True}
    ports:
      - "${API_PORT:-8000}:8000"
    volumes:
      - ./API:/app
      - ./API/logs:/app/logs
    networks:
      - schedule_network
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:8000/health')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # pgAdmin (PostgreSQL 管理介面，可選)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: schedule_pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL:-admin@example.com}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: 'False'
    ports:
      - "${PGADMIN_PORT:-5050}:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - schedule_network
    depends_on:
      postgres:
        condition: service_healthy
    profiles:
      - tools  # 使用 --profile tools 才會啟動

volumes:
  postgres_data:
    driver: local
  pgadmin_data:
    driver: local

networks:
  schedule_network:
    driver: bridge
